#!/bin/bash

# Make vim easier on Sean's eyes
# Sean Wingert August 25, 2017

# read-menu: a menu driven system information program

# read-validate: validate input
get_input () {
while :
 do 
		clear
		cat <<- EOF
			Please Select:

			  1. Install
			  2. Uninstall 
			  3. Edit .vimrc
			  4. Enable Putty Solarized session
			  5. Disable Putty Solarized session
			  6. Quit

		EOF
		read -n1 -p "Enter selection [1-6] : "

		case "$REPLY" in
			"1") do_install ;;
			"2") do_uninstall ;;
			"3") [[ -s ~/.vimrc ]] && vim ~/.vimrc || printf "\n\n" && printf " NOTE: ~/.vimrc does not exist or is empty." && sleep 1.5 ;;
			"4") palette="true" && do_uninstall && do_install ;;
			"5") unset palette && do_uninstall && do_install ;;
			"6") echo ; echo ; exit ;;
		esac
  done
}

do_uninstall() {
  #set -x
	printf "\n\n"
  echo "Remove pathogen"
  rm -iv ~/.vim/autoload/pathogen.vim
	echo

  echo "Remove ~/.vimrc additions using sed"
  sed -i '/" MYVIM_START/,/" MYVIM_END/d' ~/.vimrc
	echo

  echo "Remove mydiff"
  rm -iv ~/.vim/colors/mydiff.vim
	echo

	echo "Remove solarized: " ~/.vim/bundle/vim-colors-solarized
	rm -rIv ~/.vim/bundle/vim-colors-solarized
	echo

  read -p "Done"

  set +x
}

do_install () {
	echo
	# check if already installed

	# create paths
	mkdir -p ~/.vim/autoload ~/.vim/bundle 

	# download pathogen (manages vim runtimepath for plugins)
  [[ -d ~/.vim/autoload/pathogen.vim ]] && echo "Pathogen already installed" || curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

	# download solarized colorscheme
	[[ -d ~/.vim/bundle/vim-colors-solarized ]] && echo "vim-colors-solarized is already installed" || git clone https://github.com/altercation/vim-colors-solarized ~/.vim/bundle/vim-colors-solarized

	# leave function if already exists
	if grep -q '" MYVIM_START' ~/.vimrc
	then 
		read -p "Myvim already installed."
		return
	fi

	cat <<- EOF >> ~/.vimrc
		" MYVIM_START

		" enable pathogen
		execute pathogen#infect()
		
		" minimum defaults
		syntax on
		filetype plugin indent on
		
		" if running in diff mode (e.g., vimdiff) 
		if &diff
		  colorscheme mydiff
		  windo set wrap
		else
		  colorscheme solarized
	EOF

	if [[ -z "$palette" ]]; then 
		cat <<-EOF >> ~/.vimrc 
		  " Use these for Putty without solarized palette
		  let g:solarized_termcolors= 256
		  let g:solarized_termtrans = 0
		  let g:solarized_degrade = 0
		  let g:solarized_bold = 1
		  let g:solarized_underline = 1
		  let g:solarized_italic = 1
		  let g:solarized_contrast = "normal"
		  let g:solarized_visibility= "normal"

		  " The following must come AFTER the let statements or the colors fail to load properly!
		  colorscheme solarized
		EOF
	else
		cat <<-EOF >> ~/.vimrc
		  " make any Putty solarized palette adjustments here

		EOF
	fi

		cat <<-EOF >> ~/.vimrc
			
		  " I assume you have light background (default), but if not uncomment next line
		  " set background=dark

		  " disable the transparent(?) background to avoid odd background highlights
		  hi Normal guibg=NONE ctermbg=NONE
			endif

			" MYVIM_END
		EOF

	# install sensible colors for diffs
	cat <<- EOF >> ~/.vim/colors/mydiff.vim
		highlight DiffAdd    cterm=bold ctermfg=none ctermbg=250 gui=none guifg=bg guibg=Red
		highlight DiffDelete cterm=bold ctermfg=251 ctermbg=255 gui=none guifg=bg guibg=Red
		highlight DiffChange cterm=bold ctermfg=none ctermbg=250 gui=none guifg=bg guibg=Red
		highlight DiffText   cterm=bold ctermfg=16 ctermbg=51 gui=none guifg=bg guibg=Red
	EOF

	echo
	read -p "Done installing"
}

get_input
